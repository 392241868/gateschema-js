export default {
    binary: 'should be binary',
    boolean: 'should be true or false',
    number: 'should be a number',
    string: 'should be a string',
    list: 'should be an list',
    map: 'should be a map',
    enum: 'should be one of ${values}',
    enumList: 'should be a list only containing these values: ${values}',
    not: 'invalid value',
    equal: 'should equal to the value of ${id}',
    format: 'invalid ${format} format',
    length_string_match: 'should contain ${length} characters',
    length_string_min: 'should contain at least ${maxLength} characters',
    length_string_max: 'should contain at most ${maxLength} characters',
    length_string_range: 'should contain ${minLength} to ${maxLength} characters',
    length_list_match: 'should contain ${length} items',
    length_list_min: 'should contain at least ${minLength} items',
    length_list_max: 'should contain at most ${maxLength} items',
    length_list_range: 'should contain ${minLength} to ${maxLength} items',
    length_binary_match: 'should contain ${length} bytes',
    length_binary_min: 'should contain at least ${minLength} bytes',
    length_binary_max: 'should contain at most ${maxLength} bytes',
    length_binary_range: 'should contain ${minLength} to ${maxLength} bytes',
    max: 'should be less than or equal to ${max}',
    max_exclusive: 'should be less than ${max}',
    min: 'should be greater than or equal to ${min}',
    min_exclusive: 'should be greater than ${min}',
    notEmpty: 'should not be empty',
    oneOf: 'invalid value',
    pattern: 'invalid format',
    required: 'should not be null or undefined',
    requiredOne: 'at least one field of ${keys} could not be undefined or null',
    switch: 'no matching case',
    unique: 'each element should be unique',
    value: 'should be ${value}'
};
//# sourceMappingURL=msgs.js.map